package org.surja.spring_security_demo.config;


import jakarta.servlet.http.HttpFilter;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class SecurityConfig {


    @Bean
    public SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception {
        httpSecurity
                // 1. Define authorization rules for HTTP requests
                .authorizeHttpRequests((auth) -> {
                    // Allow anyone (no authentication required) to access any endpoint under /public/**
                    auth.requestMatchers("/public/**").permitAll()
                            // All other endpoints must be authenticated (user must log in)
                            .anyRequest().authenticated();
                })
                // 2. Enable default form login (/login page auto-generated by Spring Security)
                .formLogin(Customizer.withDefaults())
                // 3. Enable HTTP Basic authentication (useful for APIs & Postman testing)
                .httpBasic(Customizer.withDefaults());

        // 4. Build and return the SecurityFilterChain (activates the above config)
        return httpSecurity.build();
    }

}
